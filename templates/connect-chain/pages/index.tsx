import {
  Box,
  VStack,
  Divider,
  Grid,
  Link,
  Heading,
  SimpleGrid,
  Icon,
  Text,
  Stack,
  HStack,
  Container
} from '@chakra-ui/react';
import {
  Connected,
  ConnectedUserInfo,
  Connecting,
  Disconnect,
  NotExist,
  Rejected,
  UserInfo,
  WalletConnectComponent,
  Astronaut
} from '../components';
import styles from '../styles/Home.module.css';
import { useWalletManager, useWallet } from '@cosmos-kit/react';
import { mapStatusFromCosmosWallet } from "../utils";
import { MouseEventHandler } from 'react';
import Head from 'next/head';
import { LinkIcon } from '@chakra-ui/icons';

interface FeatureProps {
  title: string;
  text: string;
  href: string;
}

const Feature = ({ title, text, href }: FeatureProps) => {
  return (
    <a href={href} target="_blank">
      <Box p={5} shadow='md' borderWidth='1px'
        _hover={{ color: 'purple.500', borderColor: 'purple.300' }}>
        <Heading fontSize='xl'>{title} &rarr;</Heading>
        <Text mt={4}>{text}</Text>
      </Box>
    </a>
  );
};

const dependencies = [
  {
    id: 1,
    title: 'Chakra UI',
    text: 'A simple, modular and accessible React Component Library.',
    href: 'https://chakra-ui.com/'
  },
  {
    id: 2,
    title: 'Next.js',
    text: 'A React Framework supports hybrid static & server rendering.',
    href: 'https://nextjs.org/'
  }
];

export default function Home() {
  const { connect, disconnect } = useWalletManager();
  const { status, error, name, address } = useWallet();
  const walletStatus = mapStatusFromCosmosWallet(status, error as Error);

  const onClickConnect: MouseEventHandler = (e) => {
    e.preventDefault();
    connect();
  };

  const onClickDisconnect: MouseEventHandler = (e) => {
    e.preventDefault();
    disconnect();
  };

  const ConnectedUserInfoCard = (
    <UserInfo
      walletStatus={walletStatus}
      connected={
        <ConnectedUserInfo name={name || ''} icon={<Astronaut />} />
      }
    />
  );

  const ConnectWalletButton = (
    <WalletConnectComponent
      walletStatus={walletStatus}
      disconnect={
        <Disconnect buttonText="Connect Wallet" onClick={onClickConnect} />
      }
      connecting={<Connecting />}
      connected={
        <Connected buttonText="Disconnect" onClick={onClickDisconnect} />
      }
      rejected={
        <Rejected
          buttonText="Chain Rejected"
          wordOfWarning="There is not enough chain information to connect to this chain."
        />
      }
      notExist={<NotExist buttonText="Not Exist" />}
    />
  )

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Cosmos App</title>
        <meta name="description" content="Generated by create cosmos app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box as={Container} maxW="5xl" mt={14} p={4}>
          <Stack spacing={10} as={Container} maxW={'5xl'}
            textAlign={'center'} alignContent={'center'} alignItems='center'>
            <Heading
              fontWeight={800}
              fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }}
              lineHeight={'110%'}>
              Cosmos App Made Easy <br />
            </Heading>
            <Heading
              fontWeight={700}
              fontSize={{ base: '2xl', sm: '4xl', md: '4xl' }}
              lineHeight={'110%'}>
              <Text as={'span'}>
                Welcome to {' '}
              </Text>
              <Text as={'span'} color={'purple.500'}>
                CosmosKit.js + Telescope + Next.js
              </Text>
            </Heading>
            <HStack pt={30} spacing={2} justifyContent="center" alignItems="center">
              {ConnectedUserInfoCard}
              {ConnectWalletButton}
            </HStack>
          </Stack>
          <Grid
            mt={90}
            mb={70}
            templateColumns={{
              base: 'repeat(1, 1fr)',
              sm: 'repeat(2, 1fr)',
              md: 'repeat(3, 1fr)',
            }}
            gap={{ base: '8', sm: '12', md: '8' }}>
            <Feature
              title={'Cosmos Kit'}
              text={'A wallet adapter for react with mobile WalletConnect support for the Cosmos ecosystem.'}
              href={'https://github.com/cosmology-tech/cosmos-kit'}
            />
            <Feature
              title={'Telescope'}
              text={'A TypeScript Transpiler for Cosmos Protobufs to generate libraries for Cosmos blockchains.'}
              href={'https://github.com/osmosis-labs/telescope'}
            />
            <Feature
              title={'Ts Codegen'}
              text={'The quickest and easiest way to convert CosmWasm Contracts into dev-friendly TypeScript classes.'}
              href={'https://github.com/CosmWasm/ts-codegen'}
            />
            <Feature
              title={'Cosmology'}
              text={'Build web3 applications on top of Osmosis and the Cosmos.'}
              href={'https://github.com/cosmology-tech/cosmology'}
            />
            <Feature
              title={'Chain Registry'}
              text={'The npm package for the Official Cosmos chain registry.'}
              href={'https://github.com/cosmology-tech/chain-registry'}
            />
            <Feature
              title={'Videos'}
              text={'Learn more from the official website of @cosmology-tech.'}
              href={'https://cosmology.tech/'}
            />
          </Grid>
          <Divider mt={12} mb={12} />
          <SimpleGrid columns={{ base: 1, md: 2, lg: 2 }} spacing={20} mb={50}>
            {dependencies.map((dependency) => (
              <HStack key={dependency.id} align={'top'}>
                <Box color={'purple.500'} px={2}>
                  <Icon as={LinkIcon} />
                </Box>
                <VStack align={'start'}>
                  <Text fontWeight={600}><Link href={dependency.href} target={'_blank'}>{dependency.title}</Link></Text>
                  <Text color={'gray.600'}>{dependency.text}</Text>
                </VStack>
              </HStack>
            ))}
          </SimpleGrid>
        </Box>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://cosmology.tech/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by @cosmology-tech
        </a>
      </footer>
    </div>
  );
}